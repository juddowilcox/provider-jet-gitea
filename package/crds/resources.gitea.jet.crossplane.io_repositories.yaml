---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: repositories.resources.gitea.jet.crossplane.io
spec:
  group: resources.gitea.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - giteajet
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the Repositorys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowManualMerge:
                    type: boolean
                  allowMergeCommits:
                    type: boolean
                  allowRebase:
                    type: boolean
                  allowRebaseExplicit:
                    type: boolean
                  allowSquashMerge:
                    type: boolean
                  archived:
                    type: boolean
                  autoInit:
                    description: Flag if the repository should be initiated with the
                      configured values
                    type: boolean
                  autodetectManualMerge:
                    type: boolean
                  defaultBranch:
                    description: The default branch of the repository. Defaults to
                      `main`
                    type: string
                  description:
                    description: The description of the repository.
                    type: string
                  gitignores:
                    description: A specific gitignore that should be commited to the
                      repositoryon creation if `auto_init` is set to `true` Need to
                      exist in the gitea instance
                    type: string
                  hasIssues:
                    description: A flag if the repository should have issue management
                      enabled or not.
                    type: boolean
                  hasProjects:
                    description: A flag if the repository should have the native project
                      management enabled or not.
                    type: boolean
                  hasPullRequests:
                    description: A flag if the repository should acceppt pull requests
                      or not.
                    type: boolean
                  hasWiki:
                    description: A flag if the repository should have the native wiki
                      enabled or not.
                    type: boolean
                  ignoreWhitespaceConflicts:
                    type: boolean
                  issueLabels:
                    description: The Issue Label configuration to be used in this
                      repository. Need to exist in the gitea instance
                    type: string
                  license:
                    description: The license under which the source code of this repository
                      should be. Need to exist in the gitea instance
                    type: string
                  migrationCloneAddress:
                    type: string
                  migrationCloneAddresse:
                    description: DEPRECATED in favor of `migration_clone_address`
                    type: string
                  migrationIssueLabels:
                    type: boolean
                  migrationLfs:
                    type: boolean
                  migrationLfsEndpoint:
                    type: string
                  migrationMilestones:
                    type: boolean
                  migrationMirrorInterval:
                    description: valid time units are 'h', 'm', 's'. 0 to disable
                      automatic sync
                    type: string
                  migrationReleases:
                    type: boolean
                  migrationService:
                    description: git/github/gitlab/gitea/gogs
                    type: string
                  migrationServiceAuthPasswordSecretRef:
                    description: A SecretKeySelector is a reference to a secret key
                      in an arbitrary namespace.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  migrationServiceAuthTokenSecretRef:
                    description: A SecretKeySelector is a reference to a secret key
                      in an arbitrary namespace.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  migrationServiceAuthUsername:
                    type: string
                  mirror:
                    type: boolean
                  name:
                    description: The Name of the repository
                    type: string
                  private:
                    description: Flag if the repository should be private or not.
                    type: boolean
                  readme:
                    type: string
                  repoTemplate:
                    type: boolean
                  username:
                    description: The Owner of the repository
                    type: string
                  website:
                    description: A link to a website with more information.
                    type: string
                required:
                - name
                - username
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository.
            properties:
              atProvider:
                properties:
                  created:
                    type: string
                  id:
                    type: string
                  permissionAdmin:
                    type: boolean
                  permissionPull:
                    type: boolean
                  permissionPush:
                    type: boolean
                  updated:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
